import Head from "next/head";

import { GetStaticProps, InferGetStaticPropsType } from "next";

import { recipesData } from "../../../queries/recipes";
import { categoriesData } from "../../../queries/categories";

export const getStaticProps: GetStaticProps = async (context) => {
  const pageProps = await recipesData(context);
  const categoryNames = await categoriesData(context);

  return {
    props: {
      page: pageProps?.data || null,
      categories: categoryNames?.data || null,
      params: context.params,
    },
  };
};

export async function getStaticPaths() {
  return {
    paths: ["/recipes/categories/[slug]"],
    fallback: true,
  };
}

export const Page = (data: InferGetStaticPropsType<typeof getStaticProps>) => {
  let recipe;
  if (data?.page != undefined) {
    recipe = data?.page[0];
    console.log("recipe in categories slug", data);
  }

  let slug = data?.params?.slug;

  // const unslugify = (slug: string) => {
  //   const result = slug.replace(/\-/g, " ");
  //   return result.replace(/\w\S*/g, function (txt) {
  //     return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
  //   });
  // };

  return (
    <>
      <Head>
        <title>{"test"}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        { slug ?
        <div>
        <h1>Recipes Based on {slug}</h1> 
        {data?.page?.map((recipe: any) => {

          {recipe?.categories?.map((category: any) => {
    
            if(category?.slug?.current?.includes(`${slug}`)){
              return(
            <h1>Test</h1>
              );
            }
          })}
      })} </div> : null}
    </>
  );
};

export default Page;
